#!/usr/bin/env node
var app = require('../app');
var debug = require('debug')('cerebraapp:server');
var http = require('http');
var https = require('https');
var config=require('../config/config');
var session = require('express-session');
var cookie = require('cookie');
var in_array = require('in_array');
var request = require('request');
var fs = require("fs");
const options = {
	key: fs.readFileSync('bin/ptenplus-key.key'),
	cert: fs.readFileSync('bin/ptenplus-cert.crt'),
	ca: fs.readFileSync('bin/ptenplus-bundle.crt'),
	passphrase: 'ptenplus-key!!',
  requestCert: true,
  rejectUnauthorized: false,
  secureProtocol : 'TLSv1_2_method'
};

var port = normalizePort(process.env.PORT || config.port);
app.set('port', port);

var server = https.createServer(options, app);

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    return val;
  }

  if (port >= 0) {
    return port;
  }

  return false;
}

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}


/*
	---------------------	Socket connection	---------------------
*/
var io = require('socket.io').listen(server);